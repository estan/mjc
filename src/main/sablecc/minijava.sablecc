Package mjc;

Helpers

    unicode = [0..0xffff];
    letter = ['a' .. 'z'] | ['A' .. 'Z'];
    digit = ['0' .. '9'];

    lf = 0x000a;
    cr = 0x000d;
    ht = 0x0009;
    ff = 0x000c;
    eol = lf | cr | cr lf;

    not_star = [unicode - '*'];
    not_star_not_slash = [unicode - ['*' + '/']];

    block_comment = '/*' not_star* ('*' (not_star_not_slash not_star*)?)* '*/';
    line_comment = '//' [unicode - [cr + lf]]* eol?;

Tokens

    // Keywords
    class_keyword = 'class';
    public_keyword = 'public';
    static_keyword = 'static';
    void_keyword = 'void';
    main_keyword = 'main';
    string_keyword = 'String';
    return_keyword = 'return';
    int_keyword = 'int';
    boolean_keyword = 'boolean';
    if_keyword = 'if';
    else_keyword = 'else';
    while_keyword = 'while';
    println_keyword = 'System.out.println';
    length_keyword = 'length';
    true_keyword = 'true';
    false_keyword = 'false';
    this_keyword = 'this';
    new_keyword = 'new';

    // Operators
    plus = '+';
    minus = '-';
    star = '*';
    less_than = '<';
    assign = '=';
    and = '&&';
    not = '!';

    // Punctuation
    comma = ',';
    period = '.';
    semicolon = ';';

    // Bracketing
    lparen = '(';
    rparen = ')';
    lbrack = '[';
    rbrack = ']';
    lbrace = '{';
    rbrace = '}';

    // Miscellaneous
    comment = block_comment | line_comment;
    whitespace = (' ' | ht | ff | eol)+;
    identifier = letter (letter | digit | '_')*;
    integer = digit+;

Ignored Tokens

    whitespace, comment;

/*
 * TODO: Write "Productions" and "Abstract Syntax Tree" sections.
 */
